/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dominio.Corretor;
import Dominio.Segurado;
import Dominio.Sinistro;
import Dominio.Solicitacao;
import Excecoes.ExceptionDateInvalid;
import Motor.ControleSolicitacao;
import Motor.GerenciadorViewCorretor;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Frame;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Matheus Montanha
 */
public class Painel_Corretor extends javax.swing.JFrame {

    int visivel = 0;
    GerenciadorViewCorretor gerenciador = new GerenciadorViewCorretor(new ArrayList());
    String motivoReprovacao, motivoAlteracao, resultado;
    int selecionado = -1;
    DateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    ControleSolicitacao controlador = new ControleSolicitacao();
    static Corretor corretor;

    /**
     * Creates new form Painel_Corretor
     *
     * @param corretorOnline
     */
    public Painel_Corretor(Corretor corretorOnline) {
        initComponents();
        runProgram();
        corretor = corretorOnline;
    }

    private int readTableListaDeResidencia() {
        DefaultTableModel modelo = (DefaultTableModel) listaDeResidencias.getModel();
        modelo.setNumRows(0);
        int tamanhoLista = gerenciador.listaDeResidenciasPendentes().size();
        if (tamanhoLista > 0) {
            gerenciador.listaDeResidenciasPendentes().forEach((solicitacao) -> {
                modelo.addRow(new Object[]{
                    solicitacao.getResidencia().getCandidato().getNomePessoa(),
                    sdf.format(solicitacao.getDataSolicitacao())
                });
            });
            return 1;
        } else {
            return 0;
        }
    }

    private int readTableListaDeSolicitacaoSeguro() {
        DefaultTableModel modelo = (DefaultTableModel) listaDeSolicitacoesSeguro.getModel();
        modelo.setNumRows(0);
        int tamanho = gerenciador.listaDeSolicitacoesPendentes().size();
        if (tamanho > 0) {
            gerenciador.listaDeSolicitacoesPendentes().forEach((solicitacao) -> {
                modelo.addRow(new Object[]{
                    solicitacao.getResidencia().getCandidato().getNomePessoa(),
                    sdf.format(solicitacao.getDataSolicitacao())
                });
            });
            return 1;
        } else {
            return 0;
        }
    }

    private int readTableListaDeSinistros() {
        DefaultTableModel modelo = (DefaultTableModel) listaSinistrosPendentes.getModel();
        modelo.setNumRows(0);
        int tamanhoLista = gerenciador.listaDeSinistrosPendentes().size();
        if (tamanhoLista > 0) {
            gerenciador.listaDeSinistrosPendentes().forEach((sinistro) -> {
                modelo.addRow(new Object[]{
                    sinistro.getTipoSinistro(),
                    sdf.format(sinistro.getDataSinistro())
                });
            });
            return 1;
        } else {
            return 0;
        }
    }

    private int readTableListaDeServicos() {
        DefaultTableModel modelo = (DefaultTableModel) listaDeServicosSolicitacados.getModel();
        modelo.setNumRows(0);
        int tamanhoLista = gerenciador.servicosPendentes().size();
        if (tamanhoLista > 0) {
            for (Segurado servicosPendente : gerenciador.servicosPendentes()) {
                modelo.addRow(new Object[]{
                    servicosPendente.getServicos().get(0).getDesc(),
                    sdf.format(servicosPendente.getServicos().get(0).getDataDeSolitacao())
                });
            }
            return 1;
        } else {
            return 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        avaliarResidencia = new javax.swing.JButton();
        visualizarSolicitacoesButton = new javax.swing.JButton();
        avaliarSinistroButton = new javax.swing.JButton();
        gerenciarServicosButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxOpcoesCorretor = new javax.swing.JComboBox<>();
        buttonConfiguracao = new javax.swing.JButton();
        jPanelCorretor = new javax.swing.JPanel();
        jPanelBemVindo = new javax.swing.JPanel();
        labelFundoHomePainelCorretor = new javax.swing.JLabel();
        jPanelAvaliarSinistro = new javax.swing.JPanel();
        jPanelMotivoNegarSinistro = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        motivoNegacaoSinistrojTextArea = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        confirmarMotivoReprovacaojButton3 = new javax.swing.JButton();
        cancelarMotivoReprovacaojButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaSinistrosPendentes = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        campoDescricaoSinistro = new javax.swing.JTextArea();
        campoTipoSinistro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        parecerDoAvaliadorSinistro = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        ButtonAutorizarPagamento = new javax.swing.JButton();
        buttonNegarPagamento = new javax.swing.JButton();
        campoDataSinistroFormat = new javax.swing.JFormattedTextField();
        campoValorSinistroFormt = new javax.swing.JFormattedTextField();
        jPanelAvaliarResidencia = new javax.swing.JPanel();
        motivoAlteracaojPanel = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        motivoAlteracaojTextArea = new javax.swing.JTextArea();
        cancelarMotivoAlteracao = new javax.swing.JButton();
        confirmacaoMotivoAlteracao = new javax.swing.JButton();
        jPanelMotivoReprovacao = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        motivoReprovacaojTextArea = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        confirmarMotivoReprovacaojButton = new javax.swing.JButton();
        cancelarMotivoReprovacaojButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeResidencias = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabelCep = new javax.swing.JLabel();
        campoCepResidencia = new javax.swing.JTextField();
        campoRuaResidencia = new javax.swing.JTextField();
        jLabelRua = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoCidadeResidencia = new javax.swing.JTextField();
        campoUFResidencia = new javax.swing.JTextField();
        jLabelUF = new javax.swing.JLabel();
        jLabelDescr = new javax.swing.JLabel();
        campoDescricaoResidencia = new javax.swing.JTextField();
        buttonEditarDadosResidencia = new javax.swing.JButton();
        buttonAprovarResidencia = new javax.swing.JButton();
        buttonRecusarResidencia = new javax.swing.JButton();
        jToggleButtonDadosProprietario = new javax.swing.JToggleButton();
        jPanelDadosProprietario = new javax.swing.JPanel();
        campoNomeCandidato = new javax.swing.JTextField();
        campoCPFCandidato = new javax.swing.JTextField();
        campoEmailCandidato = new javax.swing.JTextField();
        campoTelefoneCandidato = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        campoAreaTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        campoQuantidadeDeGaragens = new javax.swing.JTextField();
        campoQuantidadeDeBanheiros = new javax.swing.JTextField();
        campoQuantidadeComodos = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        campoAnoConstrucao = new javax.swing.JTextField();
        campoAreaConstruida = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        salvarEditacao = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        terrenoPerigoso = new javax.swing.JSlider();
        estruturaAmeacada = new javax.swing.JSlider();
        localizacaoPerigosa = new javax.swing.JSlider();
        numeroTerrenoPerigoso = new javax.swing.JLabel();
        numeroEstruturaAmeacada = new javax.swing.JLabel();
        numeroLocalizacaoPerigosa = new javax.swing.JLabel();
        cancelarEditarButton = new javax.swing.JButton();
        jPanelSolicitacaoDeSeguro = new javax.swing.JPanel();
        jPanelMotivoSolicitacaoRecusado = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        motivoReprovacaoSolicitacaojTextArea = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        confirmarMotivoReprovacaojButton1 = new javax.swing.JButton();
        cancelarMotivoReprovacaojButton3 = new javax.swing.JButton();
        jPanelCalendarioAgendarVisitaResidencia = new javax.swing.JPanel();
        jCalendarAgendarVisitaResidencia = new com.toedter.calendar.JCalendar();
        jButtonConfirmarData = new javax.swing.JButton();
        jButtonCancelarRegistroDeData = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabelLocalizacaoPerigosa = new javax.swing.JLabel();
        jLabelTerrenoPerigoso = new javax.swing.JLabel();
        jLabelEstruturaPerigosa = new javax.swing.JLabel();
        jLabelDataSolicitacao = new javax.swing.JLabel();
        jLabelValorSolicitacao = new javax.swing.JLabel();
        jLabelTituloDadosSolicitacao = new javax.swing.JLabel();
        campoLocalizacaoPerigosa = new javax.swing.JTextField();
        campoTerrenoPerigoso = new javax.swing.JTextField();
        campoEstruturaAmeacada = new javax.swing.JTextField();
        campoDataSolicitacao = new javax.swing.JTextField();
        campoValorSolicitacao = new javax.swing.JTextField();
        jPanelDadosSolicitante = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        campoNomeCandidato1 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        campoCPFCandidato1 = new javax.swing.JTextField();
        campoEmailCandidato1 = new javax.swing.JTextField();
        campoTelefoneCandidato1 = new javax.swing.JTextField();
        jLabelTituloDadosSolicitante = new javax.swing.JLabel();
        buttonRecusarSeguro = new javax.swing.JButton();
        ButtonAgendarVisitaResidencia = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaDeSolicitacoesSeguro = new javax.swing.JTable();
        jPanelGerenciarServico = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        listaDeServicosSolicitacados = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        buttonRecusarServico = new javax.swing.JButton();
        campoDataAtendimentoCliente = new javax.swing.JTextField();
        campoNomeSegurado = new javax.swing.JTextField();
        campoCPFSegurado = new javax.swing.JTextField();
        campoEmailSegurado = new javax.swing.JTextField();
        campoEndResidenciaSegurado = new javax.swing.JTextField();
        campoDescricaoServico = new javax.swing.JTextField();
        jLabelBarraSup = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setBackground(new java.awt.Color(255, 255, 255));
        homeButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        homeButton.setForeground(new java.awt.Color(110, 48, 110));
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/home.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 180, 40));

        avaliarResidencia.setBackground(new java.awt.Color(255, 255, 255));
        avaliarResidencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        avaliarResidencia.setForeground(new java.awt.Color(110, 48, 110));
        avaliarResidencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/contract.png"))); // NOI18N
        avaliarResidencia.setText("Avaliar Residência        ");
        avaliarResidencia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        avaliarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaliarResidenciaActionPerformed(evt);
            }
        });
        getContentPane().add(avaliarResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 180, 40));
        avaliarResidencia.getAccessibleContext().setAccessibleDescription("");

        visualizarSolicitacoesButton.setBackground(new java.awt.Color(255, 255, 255));
        visualizarSolicitacoesButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        visualizarSolicitacoesButton.setForeground(new java.awt.Color(110, 48, 110));
        visualizarSolicitacoesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/study.png"))); // NOI18N
        visualizarSolicitacoesButton.setText("Visualizar Solicitações");
        visualizarSolicitacoesButton.setToolTipText("");
        visualizarSolicitacoesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizarSolicitacoesButtonActionPerformed(evt);
            }
        });
        getContentPane().add(visualizarSolicitacoesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 180, 40));

        avaliarSinistroButton.setBackground(new java.awt.Color(255, 255, 255));
        avaliarSinistroButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        avaliarSinistroButton.setForeground(new java.awt.Color(110, 48, 110));
        avaliarSinistroButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/danger.png"))); // NOI18N
        avaliarSinistroButton.setText("Avaliar Sinistro            ");
        avaliarSinistroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaliarSinistroButtonActionPerformed(evt);
            }
        });
        getContentPane().add(avaliarSinistroButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 180, 40));

        gerenciarServicosButton.setBackground(new java.awt.Color(255, 255, 255));
        gerenciarServicosButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        gerenciarServicosButton.setForeground(new java.awt.Color(110, 48, 110));
        gerenciarServicosButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tools.png"))); // NOI18N
        gerenciarServicosButton.setText("Gerenciar Serviços ");
        gerenciarServicosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarServicosButtonActionPerformed(evt);
            }
        });
        getContentPane().add(gerenciarServicosButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 180, 40));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo-roxoMenu.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 250, 490));

        jComboBoxOpcoesCorretor.setBackground(new java.awt.Color(110, 48, 110));
        jComboBoxOpcoesCorretor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jComboBoxOpcoesCorretor.setForeground(new java.awt.Color(110, 48, 110));
        jComboBoxOpcoesCorretor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minha conta", "Sair" }));
        jComboBoxOpcoesCorretor.setToolTipText("");
        jComboBoxOpcoesCorretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOpcoesCorretorActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxOpcoesCorretor, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 40, 130, 30));

        buttonConfiguracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/setting.png"))); // NOI18N
        buttonConfiguracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfiguracaoActionPerformed(evt);
            }
        });
        getContentPane().add(buttonConfiguracao, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 40, -1));

        jPanelCorretor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelBemVindo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelFundoHomePainelCorretor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fundoPainelCorretor.jpg"))); // NOI18N
        jPanelBemVindo.add(labelFundoHomePainelCorretor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        jPanelCorretor.add(jPanelBemVindo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        jPanelAvaliarSinistro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelAvaliarSinistro.setPreferredSize(new java.awt.Dimension(720, 480));
        jPanelAvaliarSinistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMotivoNegarSinistro.setBackground(new java.awt.Color(204, 204, 255));
        jPanelMotivoNegarSinistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelMotivoNegarSinistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        motivoNegacaoSinistrojTextArea.setColumns(20);
        motivoNegacaoSinistrojTextArea.setRows(5);
        jScrollPane9.setViewportView(motivoNegacaoSinistrojTextArea);

        jPanelMotivoNegarSinistro.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, -1));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel26.setText("Por favor, digite o motivo da reprovação:");
        jPanelMotivoNegarSinistro.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 230, 30));

        confirmarMotivoReprovacaojButton3.setBackground(new java.awt.Color(0, 153, 255));
        confirmarMotivoReprovacaojButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        confirmarMotivoReprovacaojButton3.setForeground(new java.awt.Color(255, 255, 255));
        confirmarMotivoReprovacaojButton3.setText("Confirmar");
        confirmarMotivoReprovacaojButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMotivoReprovacaojButton3ActionPerformed(evt);
            }
        });
        jPanelMotivoNegarSinistro.add(confirmarMotivoReprovacaojButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 90, 30));

        cancelarMotivoReprovacaojButton4.setBackground(new java.awt.Color(126, 87, 194));
        cancelarMotivoReprovacaojButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelarMotivoReprovacaojButton4.setForeground(new java.awt.Color(255, 255, 255));
        cancelarMotivoReprovacaojButton4.setText("Cancelar");
        cancelarMotivoReprovacaojButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMotivoReprovacaojButton4ActionPerformed(evt);
            }
        });
        jPanelMotivoNegarSinistro.add(cancelarMotivoReprovacaojButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 90, 30));

        jPanelAvaliarSinistro.add(jPanelMotivoNegarSinistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 280, 190));

        listaSinistrosPendentes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        listaSinistrosPendentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sinistro", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaSinistrosPendentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaSinistrosPendentesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaSinistrosPendentes);

        jPanelAvaliarSinistro.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 670, 100));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setText("Dados do Sinistro:");
        jPanelAvaliarSinistro.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Data:");
        jPanelAvaliarSinistro.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 30, 20));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Descrição:");
        jPanelAvaliarSinistro.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 70, 30));

        campoDescricaoSinistro.setEditable(false);
        campoDescricaoSinistro.setColumns(20);
        campoDescricaoSinistro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campoDescricaoSinistro.setRows(5);
        jScrollPane3.setViewportView(campoDescricaoSinistro);

        jPanelAvaliarSinistro.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, -1, -1));

        campoTipoSinistro.setEditable(false);
        campoTipoSinistro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarSinistro.add(campoTipoSinistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 130, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Tipo do Sinistro:");
        jPanelAvaliarSinistro.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setText("Valor: R$");
        jPanelAvaliarSinistro.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 110, 50));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("Avaliador:");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("Preencha o campo abaixo.");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        parecerDoAvaliadorSinistro.setColumns(20);
        parecerDoAvaliadorSinistro.setRows(5);
        parecerDoAvaliadorSinistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parecerDoAvaliadorSinistroMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(parecerDoAvaliadorSinistro);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 210, 90));

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel21.setText("Parecer:");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jPanelAvaliarSinistro.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 290, 240));

        ButtonAutorizarPagamento.setBackground(new java.awt.Color(0, 153, 255));
        ButtonAutorizarPagamento.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ButtonAutorizarPagamento.setForeground(new java.awt.Color(255, 255, 255));
        ButtonAutorizarPagamento.setText("Autorizar Pagamento");
        ButtonAutorizarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAutorizarPagamentoActionPerformed(evt);
            }
        });
        jPanelAvaliarSinistro.add(ButtonAutorizarPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 430, 160, 30));

        buttonNegarPagamento.setBackground(new java.awt.Color(153, 51, 255));
        buttonNegarPagamento.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonNegarPagamento.setForeground(new java.awt.Color(255, 255, 255));
        buttonNegarPagamento.setText("Negar Pagamento");
        buttonNegarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNegarPagamentoActionPerformed(evt);
            }
        });
        jPanelAvaliarSinistro.add(buttonNegarPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 140, 30));

        campoDataSinistroFormat.setEditable(false);
        campoDataSinistroFormat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jPanelAvaliarSinistro.add(campoDataSinistroFormat, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 100, 30));

        campoValorSinistroFormt.setEditable(false);
        campoValorSinistroFormt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        campoValorSinistroFormt.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jPanelAvaliarSinistro.add(campoValorSinistroFormt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 100, 40));

        jPanelCorretor.add(jPanelAvaliarSinistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        jPanelAvaliarResidencia.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAvaliarResidencia.setMinimumSize(new java.awt.Dimension(730, 490));
        jPanelAvaliarResidencia.setName(""); // NOI18N
        jPanelAvaliarResidencia.setPreferredSize(new java.awt.Dimension(730, 490));
        jPanelAvaliarResidencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        motivoAlteracaojPanel.setBackground(new java.awt.Color(204, 204, 255));
        motivoAlteracaojPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel33.setText("Por favor, digite o motivo alteração:");
        motivoAlteracaojPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 210, 30));

        motivoAlteracaojTextArea.setColumns(20);
        motivoAlteracaojTextArea.setRows(5);
        jScrollPane10.setViewportView(motivoAlteracaojTextArea);

        motivoAlteracaojPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, -1));

        cancelarMotivoAlteracao.setBackground(new java.awt.Color(126, 87, 194));
        cancelarMotivoAlteracao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelarMotivoAlteracao.setForeground(new java.awt.Color(255, 255, 255));
        cancelarMotivoAlteracao.setText("Cancelar");
        cancelarMotivoAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMotivoAlteracaoActionPerformed(evt);
            }
        });
        motivoAlteracaojPanel.add(cancelarMotivoAlteracao, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 90, 30));

        confirmacaoMotivoAlteracao.setBackground(new java.awt.Color(0, 153, 255));
        confirmacaoMotivoAlteracao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        confirmacaoMotivoAlteracao.setForeground(new java.awt.Color(255, 255, 255));
        confirmacaoMotivoAlteracao.setText("Confirmar");
        confirmacaoMotivoAlteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmacaoMotivoAlteracaoActionPerformed(evt);
            }
        });
        motivoAlteracaojPanel.add(confirmacaoMotivoAlteracao, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 90, 30));

        jPanelAvaliarResidencia.add(motivoAlteracaojPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 280, 190));

        jPanelMotivoReprovacao.setBackground(new java.awt.Color(204, 204, 255));
        jPanelMotivoReprovacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelMotivoReprovacao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        motivoReprovacaojTextArea.setColumns(20);
        motivoReprovacaojTextArea.setRows(5);
        jScrollPane6.setViewportView(motivoReprovacaojTextArea);

        jPanelMotivoReprovacao.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, -1));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel22.setText("Por favor, digite o motivo reprovação:");
        jPanelMotivoReprovacao.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 220, 30));

        confirmarMotivoReprovacaojButton.setBackground(new java.awt.Color(0, 153, 255));
        confirmarMotivoReprovacaojButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        confirmarMotivoReprovacaojButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmarMotivoReprovacaojButton.setText("Confirmar");
        confirmarMotivoReprovacaojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMotivoReprovacaojButtonActionPerformed(evt);
            }
        });
        jPanelMotivoReprovacao.add(confirmarMotivoReprovacaojButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 90, 30));

        cancelarMotivoReprovacaojButton2.setBackground(new java.awt.Color(126, 87, 194));
        cancelarMotivoReprovacaojButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelarMotivoReprovacaojButton2.setForeground(new java.awt.Color(255, 255, 255));
        cancelarMotivoReprovacaojButton2.setText("Cancelar");
        cancelarMotivoReprovacaojButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMotivoReprovacaojButton2ActionPerformed(evt);
            }
        });
        jPanelMotivoReprovacao.add(cancelarMotivoReprovacaojButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 90, 30));

        jPanelAvaliarResidencia.add(jPanelMotivoReprovacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 280, 190));

        listaDeResidencias.setBackground(new java.awt.Color(240, 240, 240));
        listaDeResidencias.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        listaDeResidencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proprietário", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaDeResidencias.setColumnSelectionAllowed(true);
        listaDeResidencias.setSelectionBackground(new java.awt.Color(126, 87, 194));
        listaDeResidencias.getTableHeader().setReorderingAllowed(false);
        listaDeResidencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDeResidenciasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listaDeResidenciasMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(listaDeResidencias);

        jPanelAvaliarResidencia.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 700, 120));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Dados Residência: ");
        jPanelAvaliarResidencia.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabelCep.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelCep.setText("Cep:");
        jPanelAvaliarResidencia.add(jLabelCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 30, -1));

        campoCepResidencia.setEditable(false);
        campoCepResidencia.setBackground(new java.awt.Color(213, 213, 213));
        campoCepResidencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoCepResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 200, 30));

        campoRuaResidencia.setEditable(false);
        campoRuaResidencia.setBackground(new java.awt.Color(213, 213, 213));
        campoRuaResidencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoRuaResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 200, 30));

        jLabelRua.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelRua.setText("Rua:");
        jPanelAvaliarResidencia.add(jLabelRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 30, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Cidade:");
        jPanelAvaliarResidencia.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 50, -1));

        campoCidadeResidencia.setEditable(false);
        campoCidadeResidencia.setBackground(new java.awt.Color(213, 213, 213));
        campoCidadeResidencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoCidadeResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 200, 30));

        campoUFResidencia.setEditable(false);
        campoUFResidencia.setBackground(new java.awt.Color(213, 213, 213));
        campoUFResidencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoUFResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 50, 30));

        jLabelUF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelUF.setText("UF:");
        jPanelAvaliarResidencia.add(jLabelUF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 30, -1));

        jLabelDescr.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelDescr.setText("Descrição:");
        jPanelAvaliarResidencia.add(jLabelDescr, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 70, 20));

        campoDescricaoResidencia.setEditable(false);
        campoDescricaoResidencia.setBackground(new java.awt.Color(213, 213, 213));
        campoDescricaoResidencia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoDescricaoResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 190, 50));

        buttonEditarDadosResidencia.setBackground(new java.awt.Color(1, 45, 90));
        buttonEditarDadosResidencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonEditarDadosResidencia.setForeground(new java.awt.Color(255, 255, 255));
        buttonEditarDadosResidencia.setText("Editar");
        buttonEditarDadosResidencia.setMaximumSize(new java.awt.Dimension(87, 23));
        buttonEditarDadosResidencia.setMinimumSize(new java.awt.Dimension(84, 23));
        buttonEditarDadosResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarDadosResidenciaActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(buttonEditarDadosResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 100, 30));

        buttonAprovarResidencia.setBackground(new java.awt.Color(0, 153, 255));
        buttonAprovarResidencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonAprovarResidencia.setForeground(new java.awt.Color(255, 255, 255));
        buttonAprovarResidencia.setText("Aprovada");
        buttonAprovarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAprovarResidenciaActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(buttonAprovarResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 450, 100, 30));

        buttonRecusarResidencia.setBackground(new java.awt.Color(126, 87, 194));
        buttonRecusarResidencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonRecusarResidencia.setForeground(new java.awt.Color(255, 255, 255));
        buttonRecusarResidencia.setText("Recusada");
        buttonRecusarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRecusarResidenciaActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(buttonRecusarResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 450, 100, 30));

        jToggleButtonDadosProprietario.setBackground(new java.awt.Color(126, 87, 194));
        jToggleButtonDadosProprietario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jToggleButtonDadosProprietario.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButtonDadosProprietario.setText("Dados Proprietário");
        jToggleButtonDadosProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDadosProprietarioActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(jToggleButtonDadosProprietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, 160, 30));

        jPanelDadosProprietario.setBackground(new java.awt.Color(1, 45, 90));
        jPanelDadosProprietario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelDadosProprietario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        campoNomeCandidato.setEditable(false);
        campoNomeCandidato.setBackground(new java.awt.Color(213, 213, 213));
        campoNomeCandidato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosProprietario.add(campoNomeCandidato, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 170, 30));

        campoCPFCandidato.setEditable(false);
        campoCPFCandidato.setBackground(new java.awt.Color(213, 213, 213));
        campoCPFCandidato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosProprietario.add(campoCPFCandidato, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 170, 30));

        campoEmailCandidato.setEditable(false);
        campoEmailCandidato.setBackground(new java.awt.Color(213, 213, 213));
        campoEmailCandidato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosProprietario.add(campoEmailCandidato, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 170, 30));

        campoTelefoneCandidato.setEditable(false);
        campoTelefoneCandidato.setBackground(new java.awt.Color(213, 213, 213));
        campoTelefoneCandidato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosProprietario.add(campoTelefoneCandidato, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 170, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nome:");
        jPanelDadosProprietario.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CPF:");
        jPanelDadosProprietario.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 30, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Email:");
        jPanelDadosProprietario.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 110, 40, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Telefone:");
        jPanelDadosProprietario.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jPanelAvaliarResidencia.add(jPanelDadosProprietario, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 260, 190));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Area Total:");
        jPanelAvaliarResidencia.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 380, 70, -1));

        campoAreaTotal.setBackground(new java.awt.Color(213, 213, 213));
        campoAreaTotal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoAreaTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 50, 30));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Quantidade de Comodos:");
        jPanelAvaliarResidencia.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, -1, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Quantidade de Banheiros:");
        jPanelAvaliarResidencia.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Quantidade de Garagens:");
        jPanelAvaliarResidencia.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, -1, -1));

        campoQuantidadeDeGaragens.setBackground(new java.awt.Color(213, 213, 213));
        campoQuantidadeDeGaragens.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoQuantidadeDeGaragens, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 50, 30));

        campoQuantidadeDeBanheiros.setBackground(new java.awt.Color(213, 213, 213));
        campoQuantidadeDeBanheiros.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoQuantidadeDeBanheiros, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 50, 30));

        campoQuantidadeComodos.setBackground(new java.awt.Color(213, 213, 213));
        campoQuantidadeComodos.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoQuantidadeComodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 50, 30));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Ano de Construção:");
        jPanelAvaliarResidencia.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, -1, -1));

        campoAnoConstrucao.setBackground(new java.awt.Color(213, 213, 213));
        campoAnoConstrucao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoAnoConstrucao, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 50, 30));

        campoAreaConstruida.setBackground(new java.awt.Color(213, 213, 213));
        campoAreaConstruida.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelAvaliarResidencia.add(campoAreaConstruida, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 50, 30));

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Area Construida:");
        jPanelAvaliarResidencia.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, -1, -1));

        salvarEditacao.setBackground(new java.awt.Color(0, 153, 255));
        salvarEditacao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        salvarEditacao.setForeground(new java.awt.Color(255, 255, 255));
        salvarEditacao.setText("Salvar");
        salvarEditacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarEditacaoActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(salvarEditacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 420, 100, 30));

        jLabel34.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel34.setText("Terreno Perigoso:");
        jPanelAvaliarResidencia.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, -1, -1));

        jLabel27.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel27.setText("Estrutura Ameaçada:");
        jPanelAvaliarResidencia.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, -1, -1));

        jLabel35.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel35.setText("Localização Perigosa:");
        jPanelAvaliarResidencia.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, -1, -1));

        terrenoPerigoso.setBackground(new java.awt.Color(213, 213, 213));
        terrenoPerigoso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        terrenoPerigoso.setForeground(new java.awt.Color(0, 0, 0));
        terrenoPerigoso.setMaximum(10);
        terrenoPerigoso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        terrenoPerigoso.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        terrenoPerigoso.setEnabled(false);
        terrenoPerigoso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                terrenoPerigosoStateChanged(evt);
            }
        });
        jPanelAvaliarResidencia.add(terrenoPerigoso, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 200, 140, -1));

        estruturaAmeacada.setBackground(new java.awt.Color(213, 213, 213));
        estruturaAmeacada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        estruturaAmeacada.setForeground(new java.awt.Color(0, 0, 0));
        estruturaAmeacada.setMaximum(10);
        estruturaAmeacada.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        estruturaAmeacada.setEnabled(false);
        estruturaAmeacada.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                estruturaAmeacadaStateChanged(evt);
            }
        });
        jPanelAvaliarResidencia.add(estruturaAmeacada, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 140, -1));

        localizacaoPerigosa.setBackground(new java.awt.Color(213, 213, 213));
        localizacaoPerigosa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        localizacaoPerigosa.setForeground(new java.awt.Color(0, 0, 0));
        localizacaoPerigosa.setMaximum(10);
        localizacaoPerigosa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        localizacaoPerigosa.setEnabled(false);
        localizacaoPerigosa.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                localizacaoPerigosaStateChanged(evt);
            }
        });
        jPanelAvaliarResidencia.add(localizacaoPerigosa, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 140, -1));

        numeroTerrenoPerigoso.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanelAvaliarResidencia.add(numeroTerrenoPerigoso, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 20, 30));

        numeroEstruturaAmeacada.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanelAvaliarResidencia.add(numeroEstruturaAmeacada, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 280, 20, 30));

        numeroLocalizacaoPerigosa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanelAvaliarResidencia.add(numeroLocalizacaoPerigosa, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 360, 20, 30));

        cancelarEditarButton.setBackground(new java.awt.Color(126, 87, 194));
        cancelarEditarButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelarEditarButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelarEditarButton.setText("Cancelar");
        cancelarEditarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarEditarButtonActionPerformed(evt);
            }
        });
        jPanelAvaliarResidencia.add(cancelarEditarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 100, 30));

        jPanelCorretor.add(jPanelAvaliarResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        jPanelSolicitacaoDeSeguro.setMinimumSize(new java.awt.Dimension(730, 490));
        jPanelSolicitacaoDeSeguro.setName(""); // NOI18N
        jPanelSolicitacaoDeSeguro.setPreferredSize(new java.awt.Dimension(730, 490));
        jPanelSolicitacaoDeSeguro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMotivoSolicitacaoRecusado.setBackground(new java.awt.Color(204, 204, 255));
        jPanelMotivoSolicitacaoRecusado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelMotivoSolicitacaoRecusado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        motivoReprovacaoSolicitacaojTextArea.setColumns(20);
        motivoReprovacaoSolicitacaojTextArea.setRows(5);
        jScrollPane7.setViewportView(motivoReprovacaoSolicitacaojTextArea);

        jPanelMotivoSolicitacaoRecusado.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, -1));

        jLabel24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel24.setText("Por favor, digite o motivo da reprovação:");
        jPanelMotivoSolicitacaoRecusado.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 230, 30));

        confirmarMotivoReprovacaojButton1.setBackground(new java.awt.Color(0, 153, 255));
        confirmarMotivoReprovacaojButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        confirmarMotivoReprovacaojButton1.setForeground(new java.awt.Color(255, 255, 255));
        confirmarMotivoReprovacaojButton1.setText("Confirmar");
        confirmarMotivoReprovacaojButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMotivoReprovacaojButton1ActionPerformed(evt);
            }
        });
        jPanelMotivoSolicitacaoRecusado.add(confirmarMotivoReprovacaojButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 90, 30));

        cancelarMotivoReprovacaojButton3.setBackground(new java.awt.Color(126, 87, 194));
        cancelarMotivoReprovacaojButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cancelarMotivoReprovacaojButton3.setForeground(new java.awt.Color(255, 255, 255));
        cancelarMotivoReprovacaojButton3.setText("Cancelar");
        cancelarMotivoReprovacaojButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMotivoReprovacaojButton3ActionPerformed(evt);
            }
        });
        jPanelMotivoSolicitacaoRecusado.add(cancelarMotivoReprovacaojButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 90, 30));

        jPanelSolicitacaoDeSeguro.add(jPanelMotivoSolicitacaoRecusado, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 280, 190));

        jPanelCalendarioAgendarVisitaResidencia.setBackground(new java.awt.Color(204, 204, 255));
        jPanelCalendarioAgendarVisitaResidencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelCalendarioAgendarVisitaResidencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCalendarAgendarVisitaResidencia.setBackground(new java.awt.Color(204, 204, 255));
        jPanelCalendarioAgendarVisitaResidencia.add(jCalendarAgendarVisitaResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jButtonConfirmarData.setBackground(new java.awt.Color(0, 153, 255));
        jButtonConfirmarData.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonConfirmarData.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConfirmarData.setText("Confirmar");
        jButtonConfirmarData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarDataActionPerformed(evt);
            }
        });
        jPanelCalendarioAgendarVisitaResidencia.add(jButtonConfirmarData, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 90, 30));

        jButtonCancelarRegistroDeData.setBackground(new java.awt.Color(153, 51, 255));
        jButtonCancelarRegistroDeData.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonCancelarRegistroDeData.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelarRegistroDeData.setText("Cancelar");
        jButtonCancelarRegistroDeData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarRegistroDeDataActionPerformed(evt);
            }
        });
        jPanelCalendarioAgendarVisitaResidencia.add(jButtonCancelarRegistroDeData, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 90, 30));

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setText("Informe a data conforme o agendamento marcado:");
        jPanelCalendarioAgendarVisitaResidencia.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 360, 20));

        jPanelSolicitacaoDeSeguro.add(jPanelCalendarioAgendarVisitaResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 400, 300));

        jLabelLocalizacaoPerigosa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelLocalizacaoPerigosa.setText("Localização Perigosa:");
        jPanelSolicitacaoDeSeguro.add(jLabelLocalizacaoPerigosa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jLabelTerrenoPerigoso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelTerrenoPerigoso.setText("Terreno Perigoso:");
        jPanelSolicitacaoDeSeguro.add(jLabelTerrenoPerigoso, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        jLabelEstruturaPerigosa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelEstruturaPerigosa.setText("Estrutura Ameaçada:");
        jPanelSolicitacaoDeSeguro.add(jLabelEstruturaPerigosa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jLabelDataSolicitacao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelDataSolicitacao.setText("Data da Solicitação:");
        jPanelSolicitacaoDeSeguro.add(jLabelDataSolicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        jLabelValorSolicitacao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelValorSolicitacao.setText("Valor da Solicitação:");
        jPanelSolicitacaoDeSeguro.add(jLabelValorSolicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 130, -1));

        jLabelTituloDadosSolicitacao.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabelTituloDadosSolicitacao.setText("Dados da Solicitação:");
        jPanelSolicitacaoDeSeguro.add(jLabelTituloDadosSolicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        campoLocalizacaoPerigosa.setEditable(false);
        jPanelSolicitacaoDeSeguro.add(campoLocalizacaoPerigosa, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 30, 30));

        campoTerrenoPerigoso.setEditable(false);
        jPanelSolicitacaoDeSeguro.add(campoTerrenoPerigoso, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 30, 30));

        campoEstruturaAmeacada.setEditable(false);
        jPanelSolicitacaoDeSeguro.add(campoEstruturaAmeacada, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 30, 30));

        campoDataSolicitacao.setEditable(false);
        jPanelSolicitacaoDeSeguro.add(campoDataSolicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 80, 30));

        campoValorSolicitacao.setEditable(false);
        jPanelSolicitacaoDeSeguro.add(campoValorSolicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 60, 30));

        jPanelDadosSolicitante.setBackground(new java.awt.Color(204, 204, 255));
        jPanelDadosSolicitante.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelDadosSolicitante.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel28.setText("Nome:");
        jPanelDadosSolicitante.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 13, 40, 20));

        campoNomeCandidato1.setEditable(false);
        campoNomeCandidato1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosSolicitante.add(campoNomeCandidato1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 160, 30));

        jLabel29.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel29.setText("CPF:");
        jPanelDadosSolicitante.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 53, -1, 20));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel30.setText("Email: ");
        jPanelDadosSolicitante.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 93, 40, 20));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel31.setText("Telefone:");
        jPanelDadosSolicitante.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 133, 60, 20));

        campoCPFCandidato1.setEditable(false);
        campoCPFCandidato1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosSolicitante.add(campoCPFCandidato1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 160, 30));

        campoEmailCandidato1.setEditable(false);
        campoEmailCandidato1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosSolicitante.add(campoEmailCandidato1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 160, 30));

        campoTelefoneCandidato1.setEditable(false);
        campoTelefoneCandidato1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelDadosSolicitante.add(campoTelefoneCandidato1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 160, 30));

        jPanelSolicitacaoDeSeguro.add(jPanelDadosSolicitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, 240, 190));

        jLabelTituloDadosSolicitante.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabelTituloDadosSolicitante.setText("Dados do Solicitante:");
        jPanelSolicitacaoDeSeguro.add(jLabelTituloDadosSolicitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        buttonRecusarSeguro.setBackground(new java.awt.Color(153, 51, 255));
        buttonRecusarSeguro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonRecusarSeguro.setForeground(new java.awt.Color(255, 255, 255));
        buttonRecusarSeguro.setText("Recusada");
        buttonRecusarSeguro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRecusarSeguroActionPerformed(evt);
            }
        });
        jPanelSolicitacaoDeSeguro.add(buttonRecusarSeguro, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, 100, 30));

        ButtonAgendarVisitaResidencia.setBackground(new java.awt.Color(0, 153, 255));
        ButtonAgendarVisitaResidencia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ButtonAgendarVisitaResidencia.setForeground(new java.awt.Color(255, 255, 255));
        ButtonAgendarVisitaResidencia.setText("Agendar Visita");
        ButtonAgendarVisitaResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgendarVisitaResidenciaActionPerformed(evt);
            }
        });
        jPanelSolicitacaoDeSeguro.add(ButtonAgendarVisitaResidencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 130, 30));

        listaDeSolicitacoesSeguro.setBackground(new java.awt.Color(240, 240, 240));
        listaDeSolicitacoesSeguro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        listaDeSolicitacoesSeguro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaDeSolicitacoesSeguro.setColumnSelectionAllowed(true);
        listaDeSolicitacoesSeguro.setSelectionBackground(new java.awt.Color(126, 87, 194));
        listaDeSolicitacoesSeguro.getTableHeader().setReorderingAllowed(false);
        listaDeSolicitacoesSeguro.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listaDeSolicitacoesSeguroMouseMoved(evt);
            }
        });
        listaDeSolicitacoesSeguro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDeSolicitacoesSeguroMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(listaDeSolicitacoesSeguro);

        jPanelSolicitacaoDeSeguro.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 690, 110));

        jPanelCorretor.add(jPanelSolicitacaoDeSeguro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        jPanelGerenciarServico.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        listaDeServicosSolicitacados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Serviço", "Data da Solicitação", "Nome do Segurado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaDeServicosSolicitacados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDeServicosSolicitacadosMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(listaDeServicosSolicitacados);

        jPanelGerenciarServico.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 670, 100));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel32.setText("Nome do Segurado:");
        jPanelGerenciarServico.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel36.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel36.setText("CPF:");
        jPanelGerenciarServico.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 30, -1));

        jLabel37.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel37.setText("Email:");
        jPanelGerenciarServico.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 40, -1));

        jLabel38.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel38.setText("End da Residencia:");
        jPanelGerenciarServico.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 110, -1));

        jLabel39.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel39.setText("Descrição do Serviço:");
        jPanelGerenciarServico.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        jLabel40.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel40.setText("Data de atendimento escolhido pelo cliente:");
        jPanelGerenciarServico.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Aceitar Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanelGerenciarServico.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 120, 30));

        buttonRecusarServico.setBackground(new java.awt.Color(153, 51, 255));
        buttonRecusarServico.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        buttonRecusarServico.setForeground(new java.awt.Color(255, 255, 255));
        buttonRecusarServico.setText("Recusar");
        jPanelGerenciarServico.add(buttonRecusarServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, 100, 30));

        campoDataAtendimentoCliente.setEditable(false);
        campoDataAtendimentoCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelGerenciarServico.add(campoDataAtendimentoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, 90, 30));

        campoNomeSegurado.setEditable(false);
        campoNomeSegurado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelGerenciarServico.add(campoNomeSegurado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 90, 30));

        campoCPFSegurado.setEditable(false);
        campoCPFSegurado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelGerenciarServico.add(campoCPFSegurado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 251, 90, 30));

        campoEmailSegurado.setEditable(false);
        campoEmailSegurado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelGerenciarServico.add(campoEmailSegurado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 291, 90, 30));

        campoEndResidenciaSegurado.setEditable(false);
        campoEndResidenciaSegurado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanelGerenciarServico.add(campoEndResidenciaSegurado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 331, 90, 30));

        campoDescricaoServico.setEditable(false);
        jPanelGerenciarServico.add(campoDescricaoServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 100, 30));

        jPanelCorretor.add(jPanelGerenciarServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 490));

        getContentPane().add(jPanelCorretor, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 730, 490));

        jLabelBarraSup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sem Título-1.jpg"))); // NOI18N
        getContentPane().add(jLabelBarraSup, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void visualizarSolicitacoesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizarSolicitacoesButtonActionPerformed
        if (readTableListaDeSolicitacaoSeguro() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "Não possui solicitações para avaliar.", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            habilitarButtonsTelaSolicitacao(false);
            visualizarSolicitacao();
        }
    }//GEN-LAST:event_visualizarSolicitacoesButtonActionPerformed

    private void avaliarSinistroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaliarSinistroButtonActionPerformed
        if (readTableListaDeSinistros() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "Não possui sinistros para avaliar.", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            visualizarSinistros();
            habilitarButtonsTelaSinistro(false);
        }
    }//GEN-LAST:event_avaliarSinistroButtonActionPerformed

    private void avaliarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaliarResidenciaActionPerformed
        if (readTableListaDeResidencia() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "Não possui residencias para avaliar.", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            visualizarResidencias();
            habiltarButtonsTelaResidencia(false);
            habilitarCamposEdicaoResidencia(false);
        }
    }//GEN-LAST:event_avaliarResidenciaActionPerformed

    private void buttonConfiguracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfiguracaoActionPerformed
        jComboBoxOpcoesCorretor.setVisible(true);
        if (visivel == 1) {
            jComboBoxOpcoesCorretor.setVisible(false);
            visivel = 0;
        } else {
            visivel++;
        }
    }//GEN-LAST:event_buttonConfiguracaoActionPerformed

    private void jComboBoxOpcoesCorretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOpcoesCorretorActionPerformed
        String opcaoEscolhida;
        opcaoEscolhida = jComboBoxOpcoesCorretor.getSelectedItem().toString();
        if (opcaoEscolhida.equalsIgnoreCase("Minha conta")) {
            Tela_cadastraPessoa telaCadastro = new Tela_cadastraPessoa();
            jComboBoxOpcoesCorretor.setVisible(false);
            telaCadastro.setVisible(true);
            dispose();
        } else if (opcaoEscolhida.equalsIgnoreCase("Sair")) {
            if (JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja sair?", "Alerta", JOptionPane.YES_NO_OPTION) == 0) {
                Tela_Login telaLogin = new Tela_Login();
                telaLogin.setVisible(true);
                dispose();
            } else {
                jComboBoxOpcoesCorretor.setVisible(false);
            }
        }
    }//GEN-LAST:event_jComboBoxOpcoesCorretorActionPerformed

    private void listaDeResidenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeResidenciasMouseClicked
        if (selecionado == -1) {
            selecionado = listaDeResidencias.getSelectedRow();
            listaDeResidencias.setSelectionBackground(new Color(1, 45, 90));
            preencherCamposAvaliarResidencia(selecionado);
            habiltarButtonsTelaResidencia(true);
            listaDeResidencias.setEnabled(false);
        } else {
            JOptionPane.showConfirmDialog(rootPane, "Você pode selecionar uma solicitação por vez!", "Alerta", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_listaDeResidenciasMouseClicked

    private void buttonEditarDadosResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarDadosResidenciaActionPerformed
        Color color = new Color(255, 255, 255);
        Font font = new Font("Arial", Font.ITALIC, 12);
        mudarFundoCamposEditadosResidencia(color, font);
        buttonsTelaResidenciaVisivel(false);
        habilitarCamposEdicaoResidencia(true);
        salvarEditacao.setVisible(true);
        cancelarEditarButton.setVisible(true);
    }//GEN-LAST:event_buttonEditarDadosResidenciaActionPerformed

    private void buttonAprovarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAprovarResidenciaActionPerformed
        List<Solicitacao> listaDeSolicitacao;
        listaDeSolicitacao = gerenciador.listaDeResidenciasPendentes();
        listaDeSolicitacao.get(selecionado).setAprovadaSolicitacao("aprovada");
        gerenciador.updateStatusSolicitacao(listaDeSolicitacao.get(selecionado));
        JOptionPane.showConfirmDialog(rootPane, "Residencia Avaliada com sucesso.", "Alerta", JOptionPane.CLOSED_OPTION);
        selecionado = -1;
        if (readTableListaDeResidencia() == 0) {
            runProgram();
        } else {
            limparCamposTelaResidencia();
            habiltarButtonsTelaResidencia(false);
            listaDeResidencias.setEnabled(true);
        }
    }//GEN-LAST:event_buttonAprovarResidenciaActionPerformed

    private void buttonRecusarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRecusarResidenciaActionPerformed
        jPanelMotivoReprovacao.setVisible(true);
        habilitarCamposTelaResidencia(false);
    }//GEN-LAST:event_buttonRecusarResidenciaActionPerformed

    private void jToggleButtonDadosProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDadosProprietarioActionPerformed
        jPanelDadosProprietario.setVisible(true);
        if (visivel == 1) {
            jPanelDadosProprietario.setVisible(false);
            visivel = 0;
        } else {
            visivel++;
        }
    }//GEN-LAST:event_jToggleButtonDadosProprietarioActionPerformed

    private void listaSinistrosPendentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaSinistrosPendentesMouseClicked
        if (selecionado == -1) {
            selecionado = listaSinistrosPendentes.getSelectedRow();
            preencherCamposAvaliarSinistro(selecionado);
            habilitarButtonsTelaSinistro(true);
            listaSinistrosPendentes.setEnabled(false);
        } else {
            JOptionPane.showConfirmDialog(rootPane, "Você pode selecionar apenas um sinistro por vez. Por favor, se deseja selecionar"
                    + " selecionar outro sinistro, click no botão (Cancelar avaliação) e selecione a solicitação desejada!", "Confirmação", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_listaSinistrosPendentesMouseClicked

    private void ButtonAutorizarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAutorizarPagamentoActionPerformed
        String resultadoSinistro = "Aprovado";
        Sinistro sinistro = gerenciador.listaDeSinistrosPendentes().get(selecionado);
        sinistro.setAutorizadoSinistro(resultadoSinistro);
        if (!parecerDoAvaliadorSinistro.getText().equalsIgnoreCase("Digite aqui o parecer técnico do sinistro...") && !parecerDoAvaliadorSinistro.getText().isEmpty() && !parecerDoAvaliadorSinistro.getText().equals("")) {
            sinistro.setParecerAvaliador(parecerDoAvaliadorSinistro.getText());
            gerenciador.updateStatusSinistro(sinistro);
            JOptionPane.showConfirmDialog(rootPane, "Pagamento de sinistro autorizado com sucesso!", "Confirmação", JOptionPane.CLOSED_OPTION);
            selecionado = -1;
            if (readTableListaDeSinistros() == 0) {
                runProgram();
            } else {
                limparCamposTelaSinistro();
                habilitarButtonsTelaSinistro(false);
                listaSinistrosPendentes.setEnabled(true);
                parecerDoAvaliadorSinistro.setText("Digite aqui o parecer técnico do sinistro...");
                parecerDoAvaliadorSinistro.setFont(new Font("Arial", Font.ITALIC, 12));
                parecerDoAvaliadorSinistro.setForeground(new Color(119, 119, 119));

            }
        } else {
            JOptionPane.showConfirmDialog(rootPane, "O parecer não pode ser deixado em branco!", "Confirmação", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_ButtonAutorizarPagamentoActionPerformed

    private void buttonNegarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNegarPagamentoActionPerformed
        jPanelMotivoNegarSinistro.setVisible(true);
        habilitarCamposAvaliarSinistro(false);
    }//GEN-LAST:event_buttonNegarPagamentoActionPerformed

    private void buttonRecusarSeguroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRecusarSeguroActionPerformed
        jPanelMotivoSolicitacaoRecusado.setVisible(true);
        habilitarCamposTelaSolicitacao(false);

    }//GEN-LAST:event_buttonRecusarSeguroActionPerformed

    private void ButtonAgendarVisitaResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgendarVisitaResidenciaActionPerformed
        jPanelCalendarioAgendarVisitaResidencia.setVisible(true);
        habilitarCamposTelaSolicitacao(false);
    }//GEN-LAST:event_ButtonAgendarVisitaResidenciaActionPerformed

    private void listaDeSolicitacoesSeguroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeSolicitacoesSeguroMouseClicked
        if (selecionado == -1) {
            selecionado = listaDeSolicitacoesSeguro.getSelectedRow();
            habilitarButtonsTelaSolicitacao(true);
            preencherCamposSolicitacaoSeguro(selecionado);
            listaDeSolicitacoesSeguro.setEnabled(false);
        } else {
            JOptionPane.showConfirmDialog(rootPane, "Você pode avaliar apenas uma"
                    + " solicitação por vez!", "Alerta", JOptionPane.CLOSED_OPTION);
        }
    }//GEN-LAST:event_listaDeSolicitacoesSeguroMouseClicked

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        runProgram();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void jButtonConfirmarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarDataActionPerformed
        int dia = jCalendarAgendarVisitaResidencia.getDayChooser().getDay(), mes = jCalendarAgendarVisitaResidencia.getMonthChooser().getMonth() + 1, ano = jCalendarAgendarVisitaResidencia.getYearChooser().getYear();
        String dataString = "" + dia + "/" + mes + "/" + ano;
        Date dataAgora = new Date();
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date data = (Date) formatter.parse(dataString);
            if (data.before(dataAgora)) {
                JOptionPane.showConfirmDialog(rootPane, "A data informada é anterior a da atual."
                        + "Por favor, digite uma data partindo de hoje.", "Alerta", JOptionPane.CLOSED_OPTION);
            } else {
                List<Solicitacao> listaDeSolicitacao;
                listaDeSolicitacao = gerenciador.listaDeSolicitacoesPendentes();
                listaDeSolicitacao.get(selecionado).setDataVisitaResidencia(data);
                gerenciador.registrarDateVisitaResidencia(listaDeSolicitacao.get(selecionado));
                JOptionPane.showConfirmDialog(rootPane, "Data registrada com sucesso.",
                        "Alerta", JOptionPane.CLOSED_OPTION);
                jPanelCalendarioAgendarVisitaResidencia.setVisible(false);
                habilitarCamposTelaSolicitacao(true);
                habilitarButtonsTelaSolicitacao(false);
                if (readTableListaDeSolicitacaoSeguro() == 0) {
                    runProgram();
                } else {
                    readTableListaDeSolicitacaoSeguro();
                    limparCamposTelaSolicitacao();
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(Painel_Corretor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConfirmarDataActionPerformed

    private void jButtonCancelarRegistroDeDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarRegistroDeDataActionPerformed
        int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (escolha == 0) {
            jPanelCalendarioAgendarVisitaResidencia.setVisible(false);
            habilitarCamposTelaSolicitacao(true);
        }
    }//GEN-LAST:event_jButtonCancelarRegistroDeDataActionPerformed

    private void confirmarMotivoReprovacaojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMotivoReprovacaojButtonActionPerformed
        if (motivoReprovacaojTextArea.getText().equalsIgnoreCase("") || motivoReprovacaojTextArea.getText().equalsIgnoreCase(" ")) {
            JOptionPane.showConfirmDialog(rootPane, "O campo de texto não deve ser deixado em branco."
                    + " Por favor, preencha novamente!", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            List<Solicitacao> listaDeSolicitacao;
            listaDeSolicitacao = gerenciador.listaDeResidenciasPendentes();
            listaDeSolicitacao.get(selecionado).setMotivoReprovacao(motivoReprovacaojTextArea.getText());
            gerenciador.updateStatusSolicitacao(listaDeSolicitacao.get(selecionado));
            JOptionPane.showConfirmDialog(rootPane, "Residencia recusada com sucesso.", "Alerta", JOptionPane.CLOSED_OPTION);
            jPanelMotivoReprovacao.setVisible(false);
            habilitarCamposTelaResidencia(true);
            if (readTableListaDeResidencia() == 0) {
                runProgram();
            } else {
                limparCamposTelaResidencia();
                habiltarButtonsTelaResidencia(false);
            }
        }
        selecionado = -1;
    }//GEN-LAST:event_confirmarMotivoReprovacaojButtonActionPerformed

    private void cancelarMotivoReprovacaojButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMotivoReprovacaojButton2ActionPerformed
        int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (escolha == 0) {
            jPanelMotivoReprovacao.setVisible(false);
            habilitarCamposTelaResidencia(true);
        }
    }//GEN-LAST:event_cancelarMotivoReprovacaojButton2ActionPerformed

    private void listaDeSolicitacoesSeguroMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeSolicitacoesSeguroMouseMoved
        listaDeSolicitacoesSeguro.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_listaDeSolicitacoesSeguroMouseMoved

    private void confirmarMotivoReprovacaojButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMotivoReprovacaojButton1ActionPerformed
        if (motivoReprovacaoSolicitacaojTextArea.getText().length() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "O motivo não pode ser em branco. Por favor, digite novamente.", "Alerta", JOptionPane.OK_OPTION);
        } else {
            motivoReprovacao = motivoReprovacaoSolicitacaojTextArea.getText();
            Solicitacao solicitacao = gerenciador.listaDeSolicitacoesPendentes().get(selecionado);
            solicitacao.setMotivoReprovacao(motivoReprovacao);
            gerenciador.updateStatusSolicitacao(solicitacao);
            JOptionPane.showConfirmDialog(rootPane, "Solicitação recusada com sucesso.", "Alerta", JOptionPane.CLOSED_OPTION);
            readTableListaDeSolicitacaoSeguro();
            habilitarCamposTelaSolicitacao(true);
            habilitarButtonsTelaSolicitacao(false);
            listaDeSolicitacoesSeguro.setEnabled(true);
            limparCamposTelaSolicitacao();
            jPanelMotivoSolicitacaoRecusado.setVisible(false);
            selecionado = -1;
        }
    }//GEN-LAST:event_confirmarMotivoReprovacaojButton1ActionPerformed

    private void cancelarMotivoReprovacaojButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMotivoReprovacaojButton3ActionPerformed
        int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (escolha == 0) {
            jPanelMotivoSolicitacaoRecusado.setVisible(false);
            habilitarCamposTelaSolicitacao(true);
        }
    }//GEN-LAST:event_cancelarMotivoReprovacaojButton3ActionPerformed

    private void parecerDoAvaliadorSinistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parecerDoAvaliadorSinistroMouseClicked
        parecerDoAvaliadorSinistro.setText("");
    }//GEN-LAST:event_parecerDoAvaliadorSinistroMouseClicked

    private void confirmarMotivoReprovacaojButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMotivoReprovacaojButton3ActionPerformed
        String resultadoSinistro = "Reprovado";
        Sinistro sinistro = gerenciador.listaDeSinistrosPendentes().get(selecionado);
        sinistro.setAutorizadoSinistro(resultadoSinistro);
        if (motivoNegacaoSinistrojTextArea.getText().equalsIgnoreCase("") || motivoReprovacaojTextArea.getText().equalsIgnoreCase(" ")) {
            JOptionPane.showConfirmDialog(rootPane, "O campo de texto não deve ser deixado em branco."
                    + " Por favor, preencha novamente!", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            sinistro.setMotivoReprovacao(motivoNegacaoSinistrojTextArea.getText());
            gerenciador.updateStatusSinistro(sinistro);
            JOptionPane.showConfirmDialog(rootPane, "Pagamento de sinistro negado com sucesso!", "Confirmação", JOptionPane.CLOSED_OPTION);
            selecionado = -1;
            if (readTableListaDeSinistros() == 0) {
                runProgram();
            } else {
                limparCamposTelaSinistro();
                habilitarButtonsTelaSinistro(false);
                listaSinistrosPendentes.setEnabled(true);
                jPanelMotivoNegarSinistro.setVisible(false);
            }
        }
    }//GEN-LAST:event_confirmarMotivoReprovacaojButton3ActionPerformed

    private void cancelarMotivoReprovacaojButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMotivoReprovacaojButton4ActionPerformed
        int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (escolha == 0) {
            jPanelMotivoNegarSinistro.setVisible(false);
            habilitarCamposAvaliarSinistro(true);
        }
    }//GEN-LAST:event_cancelarMotivoReprovacaojButton4ActionPerformed

    private void salvarEditacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarEditacaoActionPerformed
        motivoAlteracaojPanel.setVisible(true);
        habiltarButtonsTelaResidencia(false);
    }//GEN-LAST:event_salvarEditacaoActionPerformed

    private void terrenoPerigosoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_terrenoPerigosoStateChanged
        numeroTerrenoPerigoso.setText("" + terrenoPerigoso.getValue());
    }//GEN-LAST:event_terrenoPerigosoStateChanged

    private void estruturaAmeacadaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_estruturaAmeacadaStateChanged
        numeroEstruturaAmeacada.setText("" + estruturaAmeacada.getValue());
    }//GEN-LAST:event_estruturaAmeacadaStateChanged

    private void localizacaoPerigosaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_localizacaoPerigosaStateChanged
        numeroLocalizacaoPerigosa.setText("" + localizacaoPerigosa.getValue());
    }//GEN-LAST:event_localizacaoPerigosaStateChanged

    private void listaDeResidenciasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeResidenciasMouseEntered
        listaDeResidencias.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_listaDeResidenciasMouseEntered

    private void cancelarEditarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarEditarButtonActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alertat", JOptionPane.YES_NO_OPTION) == 0) {
            Color color = new Color(213, 213, 213);
            Font font = new Font("Arial", Font.PLAIN, 12);
            mudarFundoCamposEditadosResidencia(color, font);
            cancelarEditarButton.setVisible(false);
            salvarEditacao.setVisible(false);
            buttonsTelaResidenciaVisivel(true);
            habilitarCamposEdicaoResidencia(false);
            preencherCamposAvaliarResidencia(selecionado);
        }
    }//GEN-LAST:event_cancelarEditarButtonActionPerformed

    private void confirmacaoMotivoAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmacaoMotivoAlteracaoActionPerformed
        if (motivoAlteracaojTextArea.getText().equalsIgnoreCase("") || motivoAlteracaojTextArea.getText().isEmpty()) {
            JOptionPane.showConfirmDialog(rootPane, "O campo de texto não deve ser deixado em branco."
                    + " Por favor, preencha novamente!", "Alerta", JOptionPane.CLOSED_OPTION);
        } else {
            Solicitacao solicitacaoEditada = gerenciador.listaDeResidenciasPendentes().get(selecionado);
            solicitacaoEditada.getResidencia().setQntComodos(Integer.parseInt(campoQuantidadeComodos.getText()));
            solicitacaoEditada.getResidencia().setQntBanheiros(Integer.parseInt(campoQuantidadeDeBanheiros.getText()));
            solicitacaoEditada.getResidencia().setQntGaragens(Integer.parseInt(campoQuantidadeDeGaragens.getText()));
            solicitacaoEditada.getResidencia().setAnoConstrucao(Integer.parseInt(campoAnoConstrucao.getText()));
            solicitacaoEditada.getResidencia().setAreaConstruida(Double.parseDouble(campoAreaConstruida.getText()));
            solicitacaoEditada.getResidencia().setAreaTotal(Float.parseFloat(campoAreaTotal.getText()));
            solicitacaoEditada.getResidencia().setTerrenoPerigoso(terrenoPerigoso.getValue());
            solicitacaoEditada.getResidencia().setEstruturaAmeacada(estruturaAmeacada.getValue());
            solicitacaoEditada.getResidencia().setLocalizacaoPerigosa(localizacaoPerigosa.getValue());
            solicitacaoEditada.setValorSolicitacao(gerenciador.RecalcularValorSolicitacao(solicitacaoEditada.getResidencia()));
            solicitacaoEditada.setMotivoAlteracao(motivoAlteracaojTextArea.getText());
            gerenciador.editarSolicitacao(solicitacaoEditada);
            JOptionPane.showConfirmDialog(rootPane, "Solicitação editada com sucesso", "Alerta", JOptionPane.CLOSED_OPTION);
        }
        if (readTableListaDeResidencia() == 0) {
            runProgram();
        }
        selecionado = -1;
    }//GEN-LAST:event_confirmacaoMotivoAlteracaoActionPerformed

    private void cancelarMotivoAlteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMotivoAlteracaoActionPerformed
        int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja cancelar?", "Alerta", JOptionPane.YES_NO_OPTION);
        if (escolha == 0) {
            motivoAlteracaojPanel.setVisible(false);
            habilitarCamposTelaResidencia(true);
        }
    }//GEN-LAST:event_cancelarMotivoAlteracaoActionPerformed

    private void gerenciarServicosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarServicosButtonActionPerformed
        if (readTableListaDeServicos() == 0) {
            JOptionPane.showConfirmDialog(rootPane, "Não possui serviços para avaliar", "Alerta!", JOptionPane.CLOSED_OPTION);
        } else {
            visualizarServicos();
        }
    }//GEN-LAST:event_gerenciarServicosButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listaDeServicosSolicitacadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDeServicosSolicitacadosMouseClicked
        selecionado = listaDeServicosSolicitacados.getSelectedRow();
        preencherCamposAvaliarServico(selecionado);
    }//GEN-LAST:event_listaDeServicosSolicitacadosMouseClicked

    private void limparCamposGeral(List<JTextField> lista) {
        for (int i = 0; i < lista.size(); i++) {
            lista.get(i).setText("");
        }
    }

    private void habilitarCamposGeral(List<Component> lista, boolean condicao) {
        for (int i = 0; i < lista.size(); i++) {
            lista.get(i).setEnabled(condicao);
        }
    }

    private void guardarCamposPainel(List<JTextField> lista, JPanel painel) {
        Component components[] = painel.getComponents();
        for (Component component : components) {
            if (component instanceof JTextField) {
                lista.add((JTextField) component);
            }
        }
    }

    private void guardarComponentesPanel(List<Component> lista, JPanel painel) {
        Component components[] = painel.getComponents();
        for (Component component : components) {
            if (!(component instanceof JTable)) {
                lista.add(component);
            }
        }
    }

    private void limparCamposTelaResidencia() {
        List<JTextField> listaCamposTelaResidencia = new ArrayList<>();
        guardarCamposPainel(listaCamposTelaResidencia, jPanelAvaliarResidencia);
        limparCamposGeral(listaCamposTelaResidencia);
    }

    private void limparCamposTelaSolicitacao() {
        List<JTextField> listaCamposTelaSolicitacao = new ArrayList<>();
        guardarCamposPainel(listaCamposTelaSolicitacao, jPanelSolicitacaoDeSeguro);
        limparCamposGeral(listaCamposTelaSolicitacao);
    }

    private void limparCamposTelaSinistro() {
        List<JTextField> listaCamposTelaSinistro = new ArrayList<>();
        guardarCamposPainel(listaCamposTelaSinistro, jPanelAvaliarSinistro);
        limparCamposGeral(listaCamposTelaSinistro);
    }

    private void habilitarButtonsTelaSolicitacao(Boolean condicao) {
        ButtonAgendarVisitaResidencia.setEnabled(condicao);
        buttonRecusarSeguro.setEnabled(condicao);
    }

    private void habiltarButtonsTelaResidencia(Boolean condicao) {
        buttonEditarDadosResidencia.setEnabled(condicao);
        buttonAprovarResidencia.setEnabled(condicao);
        buttonRecusarResidencia.setEnabled(condicao);
        jToggleButtonDadosProprietario.setEnabled(condicao);
    }

    private void habilitarCamposEdicaoResidencia(Boolean condicao) {
        campoQuantidadeComodos.setEditable(condicao);
        campoQuantidadeDeBanheiros.setEditable(condicao);
        campoQuantidadeDeGaragens.setEditable(condicao);
        campoAnoConstrucao.setEditable(condicao);
        campoAreaConstruida.setEditable(condicao);
        campoAreaTotal.setEditable(condicao);
        salvarEditacao.setVisible(condicao);
        cancelarEditarButton.setVisible(condicao);
        terrenoPerigoso.setEnabled(condicao);
        estruturaAmeacada.setEnabled(condicao);
        localizacaoPerigosa.setEnabled(condicao);
    }

    private void mudarFundoCamposEditadosResidencia(Color color, Font font) {
        campoQuantidadeComodos.setBackground(color);
        campoQuantidadeComodos.setFont(font);
        campoQuantidadeDeBanheiros.setBackground(color);
        campoQuantidadeDeBanheiros.setFont(font);
        campoAnoConstrucao.setBackground(color);
        campoAnoConstrucao.setFont(font);
        campoQuantidadeDeGaragens.setBackground(color);
        campoQuantidadeDeGaragens.setFont(font);
        campoAreaConstruida.setBackground(color);
        campoAreaConstruida.setFont(font);
        campoAreaTotal.setBackground(color);
        campoAreaTotal.setFont(font);
    }

    private void buttonsTelaResidenciaVisivel(Boolean condicao) {
        buttonEditarDadosResidencia.setVisible(condicao);
        buttonAprovarResidencia.setVisible(condicao);
        buttonRecusarResidencia.setVisible(condicao);
        jToggleButtonDadosProprietario.setEnabled(condicao);
        listaDeResidencias.setEnabled(condicao);
    }

    private void habilitarButtonsTelaSinistro(Boolean condicao) {
        ButtonAutorizarPagamento.setEnabled(condicao);
        buttonNegarPagamento.setEnabled(condicao);
    }

    private void habilitarCamposTelaSolicitacao(Boolean condicao) {
        List<Component> listaDeComponentes = new ArrayList<>();
        guardarComponentesPanel(listaDeComponentes, jPanelSolicitacaoDeSeguro);
        habilitarCamposGeral(listaDeComponentes, condicao);
    }

    private void habilitarCamposTelaResidencia(Boolean condicao) {
        List<Component> listDeComponentes = new ArrayList<>();
        guardarComponentesPanel(listDeComponentes, jPanelAvaliarResidencia);
        habilitarCamposGeral(listDeComponentes, condicao);
    }

    private void habilitarCamposAvaliarSinistro(Boolean condicao) {
        List<Component> listDeComponentes = new ArrayList<>();
        guardarComponentesPanel(listDeComponentes, jPanelAvaliarSinistro);
        habilitarCamposGeral(listDeComponentes, condicao);
        //habilitarButtonsTelaSinistro(condicao);
    }

    private void preencherCamposAvaliarResidencia(int numeroLinha) {
        List<Solicitacao> listaDeSolicitacao;
        listaDeSolicitacao = gerenciador.listaDeResidenciasPendentes();
        String cep = "" + listaDeSolicitacao.get(numeroLinha).getResidencia().getCepRes();
        campoCepResidencia.setText(cep);
        campoCidadeResidencia.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getCandidato().getCidade());
        campoRuaResidencia.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getRuaRes());
        campoDescricaoResidencia.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getDescricaoRes());
        campoUFResidencia.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getUfResidencia());
        campoNomeCandidato.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getCandidato().getNomePessoa());
        campoCPFCandidato.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getCandidato().getCpf());
        campoEmailCandidato.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getCandidato().getEmail());
        campoTelefoneCandidato.setText(listaDeSolicitacao.get(numeroLinha).getResidencia().getCandidato().getTelefone());
        campoQuantidadeComodos.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getQntComodos());
        campoQuantidadeDeBanheiros.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getQntBanheiros());
        campoQuantidadeDeGaragens.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getQntGaragens());
        campoAreaConstruida.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getAreaConstruida());
        campoAnoConstrucao.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getAnoConstrucao());
        campoAreaTotal.setText("" + listaDeSolicitacao.get(numeroLinha).getResidencia().getAreaTotal());
        terrenoPerigoso.setValue(listaDeSolicitacao.get(numeroLinha).getResidencia().getTerrenoPerigoso());
        estruturaAmeacada.setValue(listaDeSolicitacao.get(numeroLinha).getResidencia().getEstruturaAmeacada());
        localizacaoPerigosa.setValue(listaDeSolicitacao.get(numeroLinha).getResidencia().getLocalizacaoPerigosa());
    }

    private void preencherCamposSolicitacaoSeguro(int numero) {
        List<Solicitacao> listaDeSolicitacao;
        listaDeSolicitacao = gerenciador.listaDeSolicitacoesPendentes();
        campoNomeCandidato1.setText(listaDeSolicitacao.get(numero).getResidencia().getCandidato().getNomePessoa());
        campoCPFCandidato1.setText("" + listaDeSolicitacao.get(numero).getResidencia().getCandidato().getCpf());
        campoEmailCandidato1.setText(listaDeSolicitacao.get(numero).getResidencia().getCandidato().getEmail());
        campoTelefoneCandidato1.setText(listaDeSolicitacao.get(numero).getResidencia().getCandidato().getTelefone());
        campoLocalizacaoPerigosa.setText("" + listaDeSolicitacao.get(numero).getResidencia().getLocalizacaoPerigosa());
        campoTerrenoPerigoso.setText("" + listaDeSolicitacao.get(numero).getResidencia().getTerrenoPerigoso());
        campoEstruturaAmeacada.setText("" + listaDeSolicitacao.get(numero).getResidencia().getEstruturaAmeacada());
        campoDataSolicitacao.setText("" + listaDeSolicitacao.get(numero).getDataSolicitacao());
        campoValorSolicitacao.setText("" + listaDeSolicitacao.get(numero).getValorSolicitacao());
    }

    private void preencherCamposAvaliarSinistro(int selecionado) {
        List<Sinistro> listaSinistro = gerenciador.listaDeSinistrosPendentes();
        campoDataSinistroFormat.setText("" + sdf.format(listaSinistro.get(selecionado).getDataSinistro()));
        campoDescricaoSinistro.setText(listaSinistro.get(selecionado).getDescricaoSinistro());
        campoTipoSinistro.setText(listaSinistro.get(selecionado).getTipoSinistro());
        campoValorSinistroFormt.setText("" + listaSinistro.get(selecionado).getValorSinistro());
        parecerDoAvaliadorSinistro.setText("Digite aqui o parecer técnico do sinistro...");
        parecerDoAvaliadorSinistro.setFont(new Font("Arial", Font.ITALIC, 12));
        parecerDoAvaliadorSinistro.setForeground(new Color(119, 119, 119));
    }

    private void preencherCamposAvaliarServico(int selecionado) {
        List<Segurado> listaDeSegurado = gerenciador.servicosPendentes();
        campoNomeSegurado.setText(listaDeSegurado.get(selecionado).getNomePessoa());
        campoCPFSegurado.setText(listaDeSegurado.get(selecionado).getCpf());
        campoEndResidenciaSegurado.setText(listaDeSegurado.get(selecionado).getEndereco());
        campoDescricaoServico.setText(listaDeSegurado.get(selecionado).getServicos().get(selecionado).getDescricaoSolicitacao());
        campoDataAtendimentoCliente.setText(sdf.format(listaDeSegurado.get(selecionado).getServicos().get(selecionado).getDataDeVisita()));
    }

    private void ocultarTudo() {
        jPanelAvaliarResidencia.setVisible(false);
        jPanelAvaliarSinistro.setVisible(false);
        jPanelDadosProprietario.setVisible(false);
        jPanelSolicitacaoDeSeguro.setVisible(false);
        jPanelGerenciarServico.setVisible(false);
        jPanelCorretor.setVisible(true);
        jPanelBemVindo.setVisible(false);
        buttonConfiguracao.setVisible(true);
        jComboBoxOpcoesCorretor.setVisible(false);
        jPanelMotivoSolicitacaoRecusado.setVisible(false);
        jPanelCalendarioAgendarVisitaResidencia.setVisible(false);
        salvarEditacao.setVisible(false);
        cancelarEditarButton.setVisible(false);
        motivoAlteracaojPanel.setVisible(false);
        jPanelMotivoReprovacao.setVisible(false);
        jPanelMotivoNegarSinistro.setVisible(false);
    }

    private void runProgram() {
        ocultarTudo();
        jPanelCorretor.setVisible(true);
        jPanelBemVindo.setVisible(true);

    }

    private void visualizarSolicitacao() {
        ocultarTudo();
        jPanelSolicitacaoDeSeguro.setVisible(true);
    }

    private void visualizarResidencias() {
        ocultarTudo();
        jPanelAvaliarResidencia.setVisible(true);

    }

    private void visualizarSinistros() {
        ocultarTudo();
        jPanelAvaliarSinistro.setVisible(true);

    }

    private void visualizarServicos() {
        ocultarTudo();
        jPanelGerenciarServico.setVisible(true);
    }

    private void gerarBackground() {
        String pasta = System.getProperty("user.dir");
        jLabelBarraSup.setIcon(new ImageIcon(pasta + "/src/imagens/Sem Título-1.jpg"));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Painel_Corretor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Painel_Corretor painelCorretor = new Painel_Corretor(corretor);
            painelCorretor.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAgendarVisitaResidencia;
    private javax.swing.JButton ButtonAutorizarPagamento;
    private javax.swing.JButton avaliarResidencia;
    private javax.swing.JButton avaliarSinistroButton;
    private javax.swing.JButton buttonAprovarResidencia;
    private javax.swing.JButton buttonConfiguracao;
    private javax.swing.JButton buttonEditarDadosResidencia;
    private javax.swing.JButton buttonNegarPagamento;
    private javax.swing.JButton buttonRecusarResidencia;
    private javax.swing.JButton buttonRecusarSeguro;
    private javax.swing.JButton buttonRecusarServico;
    private javax.swing.JTextField campoAnoConstrucao;
    private javax.swing.JTextField campoAreaConstruida;
    private javax.swing.JTextField campoAreaTotal;
    private javax.swing.JTextField campoCPFCandidato;
    private javax.swing.JTextField campoCPFCandidato1;
    private javax.swing.JTextField campoCPFSegurado;
    public javax.swing.JTextField campoCepResidencia;
    private javax.swing.JTextField campoCidadeResidencia;
    private javax.swing.JTextField campoDataAtendimentoCliente;
    private javax.swing.JFormattedTextField campoDataSinistroFormat;
    private javax.swing.JTextField campoDataSolicitacao;
    public javax.swing.JTextField campoDescricaoResidencia;
    private javax.swing.JTextField campoDescricaoServico;
    private javax.swing.JTextArea campoDescricaoSinistro;
    private javax.swing.JTextField campoEmailCandidato;
    private javax.swing.JTextField campoEmailCandidato1;
    private javax.swing.JTextField campoEmailSegurado;
    private javax.swing.JTextField campoEndResidenciaSegurado;
    private javax.swing.JTextField campoEstruturaAmeacada;
    private javax.swing.JTextField campoLocalizacaoPerigosa;
    private javax.swing.JTextField campoNomeCandidato;
    private javax.swing.JTextField campoNomeCandidato1;
    private javax.swing.JTextField campoNomeSegurado;
    private javax.swing.JTextField campoQuantidadeComodos;
    private javax.swing.JTextField campoQuantidadeDeBanheiros;
    private javax.swing.JTextField campoQuantidadeDeGaragens;
    public javax.swing.JTextField campoRuaResidencia;
    private javax.swing.JTextField campoTelefoneCandidato;
    private javax.swing.JTextField campoTelefoneCandidato1;
    private javax.swing.JTextField campoTerrenoPerigoso;
    private javax.swing.JTextField campoTipoSinistro;
    public javax.swing.JTextField campoUFResidencia;
    private javax.swing.JFormattedTextField campoValorSinistroFormt;
    private javax.swing.JTextField campoValorSolicitacao;
    private javax.swing.JButton cancelarEditarButton;
    private javax.swing.JButton cancelarMotivoAlteracao;
    private javax.swing.JButton cancelarMotivoReprovacaojButton2;
    private javax.swing.JButton cancelarMotivoReprovacaojButton3;
    private javax.swing.JButton cancelarMotivoReprovacaojButton4;
    private javax.swing.JButton confirmacaoMotivoAlteracao;
    private javax.swing.JButton confirmarMotivoReprovacaojButton;
    private javax.swing.JButton confirmarMotivoReprovacaojButton1;
    private javax.swing.JButton confirmarMotivoReprovacaojButton3;
    private javax.swing.JSlider estruturaAmeacada;
    private javax.swing.JButton gerenciarServicosButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCancelarRegistroDeData;
    private javax.swing.JButton jButtonConfirmarData;
    private com.toedter.calendar.JCalendar jCalendarAgendarVisitaResidencia;
    private javax.swing.JComboBox<String> jComboBoxOpcoesCorretor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBarraSup;
    public javax.swing.JLabel jLabelCep;
    private javax.swing.JLabel jLabelDataSolicitacao;
    public javax.swing.JLabel jLabelDescr;
    private javax.swing.JLabel jLabelEstruturaPerigosa;
    private javax.swing.JLabel jLabelLocalizacaoPerigosa;
    public javax.swing.JLabel jLabelRua;
    private javax.swing.JLabel jLabelTerrenoPerigoso;
    private javax.swing.JLabel jLabelTituloDadosSolicitacao;
    private javax.swing.JLabel jLabelTituloDadosSolicitante;
    public javax.swing.JLabel jLabelUF;
    private javax.swing.JLabel jLabelValorSolicitacao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAvaliarResidencia;
    private javax.swing.JPanel jPanelAvaliarSinistro;
    private javax.swing.JPanel jPanelBemVindo;
    private javax.swing.JPanel jPanelCalendarioAgendarVisitaResidencia;
    private javax.swing.JPanel jPanelCorretor;
    private javax.swing.JPanel jPanelDadosProprietario;
    private javax.swing.JPanel jPanelDadosSolicitante;
    private javax.swing.JPanel jPanelGerenciarServico;
    private javax.swing.JPanel jPanelMotivoNegarSinistro;
    private javax.swing.JPanel jPanelMotivoReprovacao;
    private javax.swing.JPanel jPanelMotivoSolicitacaoRecusado;
    private javax.swing.JPanel jPanelSolicitacaoDeSeguro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToggleButton jToggleButtonDadosProprietario;
    private javax.swing.JLabel labelFundoHomePainelCorretor;
    public javax.swing.JTable listaDeResidencias;
    private javax.swing.JTable listaDeServicosSolicitacados;
    public javax.swing.JTable listaDeSolicitacoesSeguro;
    private javax.swing.JTable listaSinistrosPendentes;
    private javax.swing.JSlider localizacaoPerigosa;
    private javax.swing.JPanel motivoAlteracaojPanel;
    private javax.swing.JTextArea motivoAlteracaojTextArea;
    private javax.swing.JTextArea motivoNegacaoSinistrojTextArea;
    private javax.swing.JTextArea motivoReprovacaoSolicitacaojTextArea;
    private javax.swing.JTextArea motivoReprovacaojTextArea;
    private javax.swing.JLabel numeroEstruturaAmeacada;
    private javax.swing.JLabel numeroLocalizacaoPerigosa;
    private javax.swing.JLabel numeroTerrenoPerigoso;
    private javax.swing.JTextArea parecerDoAvaliadorSinistro;
    private javax.swing.JButton salvarEditacao;
    private javax.swing.JSlider terrenoPerigoso;
    private javax.swing.JButton visualizarSolicitacoesButton;
    // End of variables declaration//GEN-END:variables
}
